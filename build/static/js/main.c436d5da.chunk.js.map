{"version":3,"sources":["components/spotify.js","components/Login.js","components/SidebarOption.js","DataLayer.js","components/Sidebar.js","components/SongRow.js","components/Header.js","components/Body.js","components/Footer.js","components/Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","React","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","console","log","items","HomeIcon","SearchIcon","LibraryMusicIcon","map","playlist","name","SongRow","track","album","images","url","artists","artist","Header","spotify","user","placeholder","type","Avatar","display_name","Body","discover_weekly","description","tracks","item","Footer","fontSize","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","reponse","Boolean","hostname","match","state","action","ReactDOM","render","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c436d5da.chunk.js","sourcesContent":["//https://developer.sptify.com/documentation/web-playback-sdk/quick-start/#\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"http://localhost:3000/\";\r\n\r\nconst clientId = \"09c0d00e092949dcb8d0ccbf1c240497\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { loginUrl } from \"./spotify\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"Logo\"\r\n      />\r\n      <a href={loginUrl}>Login with spotify</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./SidebarOptions.css\";\r\nfunction SidebarOption({ title, Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const DataLayerContext = React.createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { useDataLayerValue } from \"../DataLayer\";\r\nfunction Sidebar() {\r\n  const [{ playlists }, dispatch] = useDataLayerValue(null);\r\n  console.log(playlists.items);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"side_logo\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} title=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon} title=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n      <br />\r\n      <strong className=\"sidebar_title\">PLAYLISTS</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption title={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./SongRow.css\";\r\nfunction SongRow({ track = \"test\" }) {\r\n  return (\r\n    <div className=\"songRow\">\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")}-{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useDataLayerValue } from \"../DataLayer\";\r\n\r\nfunction Header({ spotify }) {\r\n  const [{ user }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input placeholder=\"search for Artists, Songs\" type=\"text\" />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useDataLayerValue } from \"../DataLayer\";\r\nimport \"./Body.css\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport SongRow from \"./SongRow\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\r\n  console.log(discover_weekly);\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"discover_weekly_img\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon className=\"body__shuffle\" />\r\n          <FavoriteIcon />\r\n          <MoreHorizIcon />\r\n        </div>\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <img\r\n          className=\"footer_alubmLogo\"\r\n          src=\"https://i.scdn.co/image/ab67616d0000b273c956570aa19c0b82b719fee6\"\r\n          alt=\"Song_logo\"\r\n        />\r\n        <div className=\"footer__songInfo\">\r\n          <h4>Chellamma</h4>\r\n          <p>Anirudh Ravichander, Jonita Gandhi</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer_center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon className=\"footer__icon\" />\r\n        <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\r\n        <SkipNextIcon className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player_body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"../src/components/Login\";\nimport { getTokenFromUrl } from \"./components/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./components/Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n    }\n    spotify.getUserPlaylists().then((playlist) => {\n      dispatch({\n        type: \"SET_PLAYLISTS\",\n        playlists: playlist,\n      });\n    });\n\n    spotify.getPlaylist(\"37i9dQZF1DX0TyiNWW7uUQ\").then((reponse) => {\n      dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: reponse,\n      });\n    });\n  }, []);\n  console.log(user);\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  playing: false,\r\n  item: null,\r\n  //token:\"BQCPJbiOS81zJyXIoX9DPI8TvL2VNRrdb2-HnVR4IDdZw-MNOrEcbEnvDeNGt0MsByswisHEINlca5A09yoRAAL8gtKSYSpkHM8XuaIeuvoKx9Gzvm_9rJf_NjcJZ81U_sWA1GUmrgCD71L9x2Cm0Nd6imOle3WFGHKryTD7JXqirn3K\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataLayer } from \"./DataLayer\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n  </DataLayer>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}